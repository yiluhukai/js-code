{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://react_fiber/./src/react/Component/index.js","webpack://react_fiber/./src/react/CreateElement/createElement.js","webpack://react_fiber/./src/react/DOM/createDOMElement.js","webpack://react_fiber/./src/react/DOM/updateElementNode.js","webpack://react_fiber/./src/react/Misc/Arrified/index.js","webpack://react_fiber/./src/react/Misc/CreateReactInstance/index.js","webpack://react_fiber/./src/react/Misc/CreateTaskQueue/index.js","webpack://react_fiber/./src/react/Misc/createStateNode/index.js","webpack://react_fiber/./src/react/Misc/getTag/index.js","webpack://react_fiber/./src/react/Misc/index.js","webpack://react_fiber/./src/react/index.js","webpack://react_fiber/./src/react/reconciliation/index.js","webpack://react_fiber/webpack/bootstrap","webpack://react_fiber/webpack/runtime/define property getters","webpack://react_fiber/webpack/runtime/hasOwnProperty shorthand","webpack://react_fiber/webpack/runtime/make namespace object","webpack://react_fiber/./src/index.js"],"sourcesContent":["export default class Component {\n    constructor(props) {\n        this.props = props;\n    }\n}\n","export function createElement(type, props, ...children) {\n    // 当我们的子元素是一个数组是需要拆分\n    const childElements = [].concat(...children).reduce((result, child) => {\n        // 忽略布尔值和null\n        if (child !== true && child !== false && child !== null) {\n            // 不是对象的时候是文本节点\n            if (child instanceof Object) {\n                result.push(child);\n            } else {\n                //文本节点\n                result.push(createElement(\"text\", { textContent: child }));\n            }\n        }\n        return result;\n    }, []);\n\n    return {\n        type,\n        props: Object.assign({ children: childElements }, props),\n        children: childElements,\n    };\n}\n","import updateElementNode from \"./updateElementNode\";\nconst createDOMElement = (virtualDom) => {\n    // 先判断是不是文本节点\n    let dom = null;\n    if (virtualDom.type === \"text\") {\n        dom = document.createTextNode(virtualDom.props.textContent);\n    } else {\n        // 是一个元素节点\n        dom = document.createElement(virtualDom.type);\n        updateElementNode(virtualDom, dom);\n    }\n    return dom;\n};\n\nexport default createDOMElement;\n","export default function updateElementNode(\n    virtualDom,\n    newElement,\n    oldVirtualDom = {}\n) {\n    const propsObj = virtualDom.props || {};\n    const oldPropsObj = oldVirtualDom.props || {};\n\n    // 对文本节点的更新\n    if (virtualDom.type === \"text\") {\n        // 文本的属性不同\n        if (propsObj.textContent !== oldPropsObj.textContent) {\n            // 更新的时候需要去对比父元素的类型,为什么呢 ，因为父元素的类型不同，更新完子节点后回去创建新的无法给父节点替换节点，\n            // 因为原来的子节点oldVirtualDom.stateNode，不存在virtualDom.parent.stateNode上\n            if (virtualDom.parent.type !== oldVirtualDom.parent.type) {\n                // 父元素的类型不同\n                virtualDom.parent.stateNode.appendChild(\n                    document.createTextNode(propsObj.textContent)\n                );\n            } else {\n                // 父元素的类型相同\n                virtualDom.parent.stateNode.replaceChild(\n                    document.createTextNode(propsObj.textContent),\n                    oldVirtualDom.stateNode\n                );\n            }\n        }\n        return;\n    }\n\n    Object.keys(propsObj).forEach((prop) => {\n        const propValue = propsObj[prop];\n        const oldPropValue = oldPropsObj[prop];\n        if (propValue !== oldPropValue) {\n            if (prop.slice(0, 2) === \"on\") {\n                // 当我们要添加的属性是元素的事件\n                const eventName = prop.slice(2).toLowerCase();\n                if (oldPropValue) {\n                    // 删除旧的事件\n                    newElement.removeEventListener(eventName, oldPropValue);\n                }\n                newElement.addEventListener(eventName, propValue);\n            } else if (prop === \"value\" || prop === \"checked\") {\n                // bool属性\n                newElement[prop] = propValue;\n            } else if (prop !== \"children\") {\n                // class属性和其他的属性\n                if (prop === \"className\") {\n                    newElement.setAttribute(\"class\", propValue);\n                } else {\n                    newElement.setAttribute(prop, propValue);\n                }\n            }\n        }\n    });\n    // 判断属性被删除的情况(旧的虚拟上有但是新的没有)\n\n    Object.keys(oldPropsObj).forEach((prop) => {\n        const propValue = propsObj[prop];\n        const oldPropValue = oldPropsObj[prop];\n        if (!propValue) {\n            if (prop.slice(0, 2) === \"on\") {\n                const eventName = prop.slice(2).toLowerCase();\n                newElement.removeEventListener(eventName, oldPropValue);\n            } else if (prop !== \"children\") {\n                newElement.removeAttribute(prop);\n            }\n        }\n    });\n    newElement._virtualDom = virtualDom;\n}\n","const arrified = (arg) => (Array.isArray(arg) ? arg : [arg]);\n\nexport default arrified;\n","export const createReactInstance = (fiber) => {\n    let instance = null;\n    if (fiber.tag === \"class_component\") {\n        instance = new fiber.type(fiber.props);\n    } else {\n        instance = fiber.type;\n    }\n    return instance;\n};\n","/**\n * 导入一个生成任务队列的方法\n */\n\nexport const createTaskQueue = () => {\n    const queue = [];\n    return {\n        push: (task) => queue.push(task),\n        pop: () => queue.shift(),\n        isEmpty: () => queue.length === 0,\n    };\n};\n","import { createDOMElement } from \"../../DOM\";\nimport { createReactInstance } from \"../CreateReactInstance\";\nconst createStateNode = (fiber) => {\n    // 文本节点和元素节点\n    if (fiber.tag === \"host_component\") {\n        return createDOMElement(fiber);\n    } else {\n        return createReactInstance(fiber);\n    }\n};\n\nexport default createStateNode;\n","import Component from \"../../Component\";\nconst getTag = (vdom) => {\n    // 文本节点和元素节点\n    if (typeof vdom.type === \"string\") {\n        return \"host_component\";\n    } else if (Object.getPrototypeOf(vdom.type) === Component) {\n        // 类组件\n        return \"class_component\";\n    } else {\n        return \"function_component\";\n    }\n};\nexport default getTag;\n","export { createTaskQueue } from \"./CreateTaskQueue\";\nexport { default as arrified } from \"./Arrified\";\nexport { default as createStateNode } from \"./createStateNode\";\nexport { default as getTag } from \"./getTag\";\nexport { createReactInstance } from \"./CreateReactInstance\";\n","import { createElement } from \"./CreateElement/createElement\";\nexport { render } from \"./reconciliation\";\nexport { default as Component } from \"./Component\";\nexport default {\n    createElement,\n};\n","/**\n *\n * 实现render方法：\n *\n * render方法主要功能：1.向任务队列中添加任务\n *                  2. 浏览器空闲的时候从任务队列中取出任务执行\n *\n * 任务：这里的任务就是通过vdom对象构建fiber对象\n *\n */\n\nimport updateElementNode from \"../DOM/updateElementNode\";\nimport { createTaskQueue, arrified, createStateNode, getTag } from \"../Misc\";\n\nconst taskQueue = createTaskQueue();\n\nlet subTask = null;\n\nlet pendingCommit = null;\n\nconst getFirstTask = () => {\n    /**\n     * 获取任务队列队列中第一个任务的子任务\n     *\n     */\n\n    const subTask = taskQueue.pop();\n    // console.error(subTask);\n\n    /**\n     * 构建fiber对象(最晚层元素root对应的fiber对象)\n     */\n\n    return {\n        props: subTask.props,\n        stateNode: subTask.dom, //当前fiber对象对应的dom\n        tag: \"hostRoot\", //根节点\n        effects: [],\n        child: null, //后面构建了子fiber节点再去设置,\n        alternate: subTask.dom.__rootFiberContainer, // 替换的节点对应的fiber对象\n    };\n};\n\n/**\n *\n * @param {*} fiber 父fiber对象\n * @param {Array | Object} children 虚拟dom\n */\nconst reconcileChildren = (fiber, children) => {\n    //当children是根fiber对象时，children是对象，当是用creaeElement方法创建的，则是数组\n    // 将children转成数组统一处理\n    const arrifiedChildren = arrified(children);\n    let index = 0,\n        element = null,\n        length = arrifiedChildren.length,\n        newFiber = null,\n        prevFiber = null;\n    let alternate = null; // 存储每一个子节点对应的旧fiber节点\n    if (fiber.alternate && fiber.alternate.child) {\n        alternate = fiber.alternate.child;\n    }\n    // 保证我们删除的时候可以进入\n    while (index < length || alternate) {\n        element = arrifiedChildren[index];\n        if (!element && alternate) {\n            //说明子节点中有删除\n            alternate.effectTag = \"delete\";\n            // 将删除操作添加到新的fiber对象中\n            fiber.effects.push(alternate);\n        } else if (element && alternate) {\n            // 更新节点\n            // 节点的类型不同\n            newFiber = {\n                type: element.type,\n                props: element.props,\n                tag: getTag(element),\n                effects: [],\n                effectTag: \"update\", // 更新节点\n                // stateNode: null,\n                parent: fiber,\n                alternate, // 当前节点对应的旧的fiber对象\n            };\n            // 更新节点\n            if (element.type !== alternate.type) {\n                // 给新创建的fiber对象添加stateNode属性\n                newFiber.stateNode = createStateNode(newFiber);\n            } else {\n                // 节点的类型相同，用旧的几点代替新的节点\n                newFiber.stateNode = alternate.stateNode;\n            }\n        } else if (element && !alternate) {\n            // 初始渲染\n            // 将当前的虚拟dom构建成fiber对象\n            newFiber = {\n                type: element.type,\n                props: element.props,\n                tag: getTag(element),\n                effects: [],\n                effectTag: \"placement\", // 添加节点\n                // stateNode: null,\n                parent: fiber,\n            };\n            // 给新创建的fiber对象添加stateNode属性\n            newFiber.stateNode = createStateNode(newFiber);\n        }\n\n        // 更新胡后续的child节点对应的alternate\n        if (alternate && alternate.subling) {\n            alternate = alternate.subling;\n        } else {\n            alternate = null;\n        }\n\n        if (index == 0) {\n            // 作为当前节点的child\n            fiber.child = newFiber;\n        } else if (element) {\n            //避免删除节点的时候去添加过去的节点\n            //作为前一个兄弟节点的邻居节点\n            prevFiber.subling = newFiber;\n        }\n        prevFiber = newFiber;\n        index++;\n    }\n};\n// fiber对象是最外层的fiber对象\nconst commitAllWork = (fiber) => {\n    fiber.effects.forEach((subFiber) => {\n        if (subFiber.effectTag === \"delete\") {\n            // 删除节点\n            subFiber.parent.stateNode.removeChild(subFiber.stateNode);\n        } else if (subFiber.effectTag === \"update\") {\n            // 更新dom节点\n            if (subFiber.type !== subFiber.alternate.type) {\n                /**\n                 * dom节点的类型不同，创建一个新的节点去替换旧的节点\n                 */\n                subFiber.parent.stateNode.replaceChild(\n                    subFiber.stateNode,\n                    subFiber.alternate.stateNode\n                );\n            } else {\n                /**\n                 * 类型相同，更新节点的内容\n                 */\n                updateElementNode(\n                    subFiber,\n                    subFiber.stateNode,\n                    subFiber.alternate\n                );\n            }\n        } else if (subFiber.effectTag === \"placement\") {\n            // 添加的过程中忽略掉类组件和函数组件的fiber对象\n            let parentFiber = subFiber.parent;\n\n            while (\n                parentFiber.tag === \"class_component\" ||\n                parentFiber.tag === \"function_component\"\n            ) {\n                parentFiber = parentFiber.parent;\n            }\n            if (subFiber.tag === \"host_component\") {\n                // 添加节点\n                parentFiber.stateNode.appendChild(subFiber.stateNode);\n            }\n        }\n\n        /**\n         * 缓存旧的的fiber节点，为下次比对准备\n         */\n\n        fiber.stateNode.__rootFiberContainer = fiber;\n    });\n};\n\nconst executeTask = (fiber) => {\n    /**\n     * 构建当前fiber对象的子fiber对象\n     */\n    if (fiber.tag === \"class_component\") {\n        reconcileChildren(fiber, fiber.stateNode.render());\n    } else if (fiber.tag === \"function_component\") {\n        reconcileChildren(fiber, fiber.stateNode(fiber.props));\n    } else {\n        reconcileChildren(fiber, fiber.props.children);\n    }\n\n    // 下次任务时继续构建fiber.child对象,z这块只处理了子节点，没有处理兄弟节点\n    if (fiber.child) {\n        return fiber.child;\n    }\n\n    // 当没有子节点的时候，开始去查找兄弟节点并构建fiber对象\n    let currentFiber = fiber;\n\n    while (currentFiber.parent) {\n        // 存放当前节点下的所有fiber对象，包含自身\n        currentFiber.parent.effects = currentFiber.parent.effects.concat(\n            currentFiber.effects.concat([currentFiber])\n        );\n        if (currentFiber.subling) {\n            return currentFiber.subling; // 基于该节点去构建\n        }\n        currentFiber = currentFiber.parent;\n        // 向上去处理父节点subling节点\n    }\n    // 执行完成后，currentFiber指向的最外层的fiber对象\n    // console.dir(currentFiber);\n    pendingCommit = currentFiber;\n};\n\nconst workLoop = (deadline) => {\n    if (!subTask) {\n        subTask = getFirstTask();\n        // console.log(subTask);\n    }\n\n    while (subTask && deadline.timeRemaining() > 1) {\n        // 执行任务并返回一个新的任务,这里的任务是构建好的fiber对象\n        subTask = executeTask(subTask);\n    }\n\n    // 当上面的fiber对象构建完成，subTask === undefined\n\n    if (pendingCommit) {\n        commitAllWork(pendingCommit);\n    }\n};\n\n// 执行任务\nconst performTask = (deadline) => {\n    // 开启任务循环\n    workLoop(deadline);\n    // 当任务执行中断后中心执行\n    if (subTask || !taskQueue.isEmpty()) {\n        requestIdleCallback(performTask);\n    }\n};\n\n/**\n * render方法的参数，第一个element代表虚拟dom，第二个参数代表根元素\n */\nexport function render(element, dom) {\n    // 向任务队列中添加任务，将jsx最为当前元素的子元素\n    taskQueue.push({ dom, props: { children: element } });\n\n    // 取出我们刚刚添加的任务\n\n    // console.log(taskQueue);\n\n    // 取出任务队列中的任务执行\n    requestIdleCallback(performTask);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React, { render, Component } from \"./react\";\nconst jsx = (\n    <div>\n        <p>Hello world!</p>\n        <h1>subling</h1>\n    </div>\n);\n\n// console.log(jsx);\n\nconst root = document.getElementById(\"root\");\n\nrender(jsx, root);\n\nsetTimeout(() => {\n    render(\n        <div>\n            {/* <div>奥利给</div> */}\n            <h1>subling</h1>\n        </div>,\n        root\n    );\n}, 2000);\n\nclass MyComponent extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <div> Hello,{this.props.name}!</div>;\n    }\n}\n// function MyComponent(props) {\n//     return <div> Hello,{props.name}!</div>;\n// }\n\n// render(<MyComponent name=\"zce\" />, root);\n"],"names":["Component","props","createElement","type","children","childElements","concat","reduce","result","child","Object","push","textContent","assign","updateElementNode","createDOMElement","virtualDom","dom","document","createTextNode","newElement","oldVirtualDom","propsObj","oldPropsObj","parent","stateNode","appendChild","replaceChild","keys","forEach","prop","propValue","oldPropValue","slice","eventName","toLowerCase","removeEventListener","addEventListener","setAttribute","removeAttribute","_virtualDom","arrified","arg","Array","isArray","createReactInstance","fiber","instance","tag","createTaskQueue","queue","task","pop","shift","isEmpty","length","createStateNode","getTag","vdom","getPrototypeOf","default","render","taskQueue","subTask","pendingCommit","getFirstTask","effects","alternate","__rootFiberContainer","reconcileChildren","arrifiedChildren","index","element","newFiber","prevFiber","effectTag","subling","commitAllWork","subFiber","removeChild","parentFiber","executeTask","currentFiber","workLoop","deadline","timeRemaining","performTask","requestIdleCallback","React","jsx","root","getElementById","setTimeout","MyComponent","name"],"sourceRoot":""}